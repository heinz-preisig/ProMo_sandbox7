1 :: one =  Instantiate ( value , value )
2 :: zero =  Instantiate ( value , value )
3 :: onehalf =  Instantiate ( value , value )
4 :: to =  Instantiate ( t , value )
5 :: te =  Instantiate ( t , value )
6 :: p =  neg ( ParDiff ( U , V ) )
7 :: T =  ParDiff ( U , S )
8 :: chemPot =  ParDiff ( U , n )
9 :: H =  U - p . V
10 :: A =  U - T . S
11 :: G =  U + p . V - T . S
12 :: Boltzmann =  Instantiate ( S , value )
13 :: GasConstant =  Avogadro . Boltzmann
14 :: Ue =  inv ( charge ) . U
15 :: v_x =  ParDiff ( r_x , t )
16 :: v_y =  ParDiff ( r_y , t )
17 :: v_z =  ParDiff ( r_z , t )
20 :: Mm =  Mm
21 :: Cp =  ParDiff ( H , T )
22 :: Cv =  ParDiff ( U , T )
23 :: kq_x =  inv ( V ) . ParDiff ( U , T ) . v_x
24 :: kq_y =  inv ( V ) . ParDiff ( U , T ) . v_y
25 :: kq_z =  inv ( V ) . ParDiff ( U , T ) . v_z
26 :: kq =  Stack ( kq_x , kq_y , kq_z )
27 :: kc_x =  ( Mm | S in N & S | inv ( chemPot ) ) . inv ( V ) . ParDiff ( U , p ) . v_x
28 :: kc_y =  ( Mm | S in N & S | inv ( chemPot ) ) . inv ( V ) . ParDiff ( U , p ) . v_y
29 :: kc_z =  ( Mm | S in N & S | inv ( chemPot ) ) . inv ( V ) . ParDiff ( U , p ) . v_z
30 :: kc =  Stack ( kc_x , kc_y , kc_z )
31 :: kd_x =  inv ( chemPot ) . ( v_x : ( inv ( V ) : ParDiff ( U , chemPot ) ) )
32 :: kd_y =  inv ( chemPot ) . ( v_y : ( inv ( V ) : ParDiff ( U , chemPot ) ) )
33 :: kd_z =  inv ( chemPot ) . ( v_z : ( inv ( V ) : ParDiff ( U , chemPot ) ) )
34 :: kd =  Stack ( kd_x , kd_y , kd_z )
35 :: h =  H : inv ( n )
36 :: m =  Mm | S in N & S | n
37 :: m =  m
38 :: density =  m . inv ( V )
39 :: T_NK =  P_N_NK | N | T
41 :: Ea =  Instantiate ( P_N_NK | N | GasConstant . T_NK , value )
42 :: K_NK =  Ko : exp ( neg ( Ea ) . inv ( GasConstant | N | P_N_NK . T_NK ) )
44 :: c =  inv ( V ) : n
45 :: c =  c
46 :: c_KS =  c | N & S | P_NS_KS
47 :: co_KS =  Instantiate ( c_KS , value )
48 :: Ayz =  r_y . r_z
49 :: Axz =  r_x . r_z
50 :: Axy =  r_x . r_y
51 :: density =  density
52 :: h =  h
53 :: kq_x =  kq_x
54 :: Cv =  Cv
55 :: kq_y =  kq_y
56 :: kq_z =  kq_z
57 :: kq =  kq
58 :: kc_x =  kc_x
59 :: Cp =  Cp
60 :: kc_y =  kc_y
61 :: kc_z =  kc_z
62 :: kc =  kc
63 :: kd_x =  kd_x
64 :: kd_y =  kd_y
65 :: kd_z =  kd_z
66 :: kd =  kd
67 :: fV =  inv ( density ) . kc_x . Ayz . D | N | p
68 :: fnd_AS =  Ayz : neg ( kd_x ) . D_NS_AS | N & S | chemPot
69 :: fnd =  F_NS_AS | A & S | fnd_AS
70 :: fHd_A =  ( F_NS_AS | N & S | h ) | S in A & S | fnd_AS
71 :: fHd =  F_N_A | A | fHd_A
72 :: d =  sign ( F_N_A | N | p )
73 :: c_AS =  ( onehalf . ( F_NS_AS - d : abs ( F_NS_AS ) ) ) | N & S | c
74 :: fnc_AS =  fV : c_AS
75 :: fnc =  F_NS_AS | A & S | fnc_AS
76 :: dndt =  fnc + fnd
77 :: fHc_A =  ( F_NS_AS | N & S | h ) | S in A & S | fnc_AS
78 :: fHc =  F_N_A | A | fHc_A
79 :: fw_A =  Instantiate ( fHc_A , value )
80 :: fw =  F_N_A | A | fw_A
81 :: fq_A_x =  Ayz . kq_x . D | N | T
82 :: fq =  F_N_A | A | fq_A_x
83 :: dHdt =  fHc + fHd + fq + fw
84 :: Ho =  Instantiate ( H , value )
85 :: no =  Instantiate ( n , value )
86 :: n =  Integral ( dndt :: t in [ to , te ] )
87 :: H =  Integral ( dHdt :: t in [ to , te ] )
88 :: additive =  Instantiate ( additive , value )
89 :: i =  TotalDiff ( charge , t )
90 :: i =  i
91 :: elResist =  inv ( i ) . Ue
92 :: elResist =  Instantiate ( elResist , value )
93 :: elConductC =  inv ( elResist ) . additive
94 :: elConductC =  elConductC
95 :: Ue =  inv ( elConductC ) . i
96 :: dUedt =  one . Ue
97 :: dUedt =  Root ( Ue )
98 :: dUedt =  Instantiate ( dUedt , zero )
99 :: i =  i
104 :: additive =  additive
105 :: T =  T
106 :: intensities =  MixedStack ( p , T , chemPot , c , Ue )
107 :: nTotal =  one_S | S in N & S | n
108 :: e =  meas - setPoint
109 :: xo =  Instantiate ( x , value )
110 :: dxdt =  A | N | x + B | A | e
111 :: x =  Integral ( I_N_D | D | dxdt :: t in [ to , te ] )
112 :: additive =  additive
113 :: Imeasured =  i
114 :: Ue =  Ue
115 :: UeMeasured =  Ue
116 :: addMeasured =  additive
117 :: RComputed =  inv ( Imeasured ) . UeMeasured
118 :: store =  MixedStack ( Imeasured , UeMeasured , RComputed , addMeasured )
119 :: setPoint =  Instantiate ( setPoint , value )
